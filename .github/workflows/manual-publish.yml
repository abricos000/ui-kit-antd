name: Publish UI Kit to NPM

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type (patch/minor/major)'
        required: true
        default: 'minor'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git config --global pull.rebase false

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: |
          npm install -g standard-version@latest
          npm ci

      - name: Bump version in repository
        id: versioning
        run: |
          # Проверяем, существует ли версия уже в NPM
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if npm view ui-kit-custom-antd@$CURRENT_VERSION version >/dev/null 2>&1; then
            echo "::error::Version $CURRENT_VERSION already exists in npm"
            exit 1
          fi
          
          # Обновляем версию в package.json и создаем CHANGELOG.md
          npx standard-version --release-as ${{ inputs.version_type }} --skip.tag
          
          # Получаем новую версию
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "Version bumped to $NEW_VERSION"

          # Коммитим изменения версии
          git add package.json package-lock.json CHANGELOG.md
          git commit -m "chore: bump version to $NEW_VERSION [skip ci]"

      - name: Create and push git tag
        run: |
          git tag -a v${{ env.NEW_VERSION }} -m "Release v${{ env.NEW_VERSION }}"
          echo "Created tag v${{ env.NEW_VERSION }}"

      - name: Publish to NPM
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
          npm publish --access public
          echo "Published ui-kit-custom-antd@${{ env.NEW_VERSION }} to NPM"

      - name: Push changes to repository
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:$GH_TOKEN@github.com/${{ github.repository }}.git
          git pull origin main
          git push origin main
          git push origin v${{ env.NEW_VERSION }}
          echo "Pushed version changes and tag v${{ env.NEW_VERSION }} to GitHub"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.NEW_VERSION }}
          name: v${{ env.NEW_VERSION }}
          body: |
            Changes in this version:
            - See CHANGELOG.md for details
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}