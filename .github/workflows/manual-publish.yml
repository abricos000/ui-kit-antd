name: Publish UI Kit to NPM

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'minor'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read package info
        id: package
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_OUTPUT
          echo "Package name: $PACKAGE_NAME"

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Get published version
        id: npm_version
        run: |
          PUBLISHED_VERSION=$(npm view ${{ steps.package.outputs.PACKAGE_NAME }} version 2>/dev/null || echo "0.0.0")
          echo "PUBLISHED_VERSION=$PUBLISHED_VERSION" >> $GITHUB_OUTPUT
          echo "Published version: $PUBLISHED_VERSION"

      - name: Calculate new version
        id: bump
        run: |
          IFS='.' read -r major minor patch <<< "${{ steps.npm_version.outputs.PUBLISHED_VERSION }}"
          case "${{ inputs.version_type }}" in
            major)
              major=$((major + 1))
              minor=0
              patch=0
              ;;
            minor)
              minor=$((minor + 1))
              patch=0
              ;;
            patch)
              patch=$((patch + 1))
              ;;
          esac
          NEW_VERSION="${major}.${minor}.${patch}"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: Publish package
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Создаем временный package.json с новой версией
          mkdir -p temp_publish
          cp -r dist temp_publish/
          cp package.json temp_publish/
          cd temp_publish
          
          # Обновляем версию через node.js (без npm)
          node <<EOF
          const fs = require('fs');
          const pkg = require('../package.json');
          pkg.version = '${{ steps.bump.outputs.NEW_VERSION }}';
          fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));
          EOF
          
          # Публикуем из временной директории
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
          npm publish --access public
          echo "Published ${{ steps.package.outputs.PACKAGE_NAME }}@${{ steps.bump.outputs.NEW_VERSION }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.bump.outputs.NEW_VERSION }}
          name: v${{ steps.bump.outputs.NEW_VERSION }}
          body: |
            ## ${{ steps.package.outputs.PACKAGE_NAME }} v${{ steps.bump.outputs.NEW_VERSION }}
            
            Published to NPM registry
            - Previous version: ${{ steps.npm_version.outputs.PUBLISHED_VERSION }}
            - Bump type: ${{ inputs.version_type }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}