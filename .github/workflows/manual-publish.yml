name: Publish UI Kit to NPM

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'minor'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read package info
        id: package
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_OUTPUT
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Package name: $PACKAGE_NAME"
          echo "Current version: $CURRENT_VERSION"

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Get published version
        id: npm_version
        run: |
          PUBLISHED_VERSION=$(npm view ${{ steps.package.outputs.PACKAGE_NAME }} version 2>/dev/null || echo "0.0.0")
          echo "PUBLISHED_VERSION=$PUBLISHED_VERSION" >> $GITHUB_OUTPUT
          echo "Published version: $PUBLISHED_VERSION"

      - name: Bump version
        id: bump
        run: |
          IFS='.' read -r major minor patch <<< "${PUBLISHED_VERSION//v}"
          case "${{ inputs.version_type }}" in
            major) major=$((major + 1)); minor=0; patch=0;;
            minor) minor=$((minor + 1)); patch=0;;
            patch) patch=$((patch + 1));;
          esac
          NEW_VERSION="$major.$minor.$patch"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: Publish package
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Временное обновление версии
          npm pkg set version=${{ steps.bump.outputs.NEW_VERSION }}
          
          # Публикация
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
          npm publish --access public
          echo "Published ${{ steps.package.outputs.PACKAGE_NAME }}@${{ steps.bump.outputs.NEW_VERSION }}"
          
          # Возвращаем исходную версию
          npm pkg set version=${{ steps.package.outputs.CURRENT_VERSION }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.bump.outputs.NEW_VERSION }}
          name: v${{ steps.bump.outputs.NEW_VERSION }}
          body: |
            ## ${{ steps.package.outputs.PACKAGE_NAME }} v${{ steps.bump.outputs.NEW_VERSION }}
            
            Published to NPM registry
            - Previous version: ${{ steps.npm_version.outputs.PUBLISHED_VERSION }}
            - Bump type: ${{ inputs.version_type }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}