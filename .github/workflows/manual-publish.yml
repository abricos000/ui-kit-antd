name: Publish UI Kit to NPM

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Get current version from NPM
        id: version
        run: |
          CURRENT_VERSION=$(npm view ui-kit-custom-antd version || echo "0.0.0")
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Calculate new version
        id: bump
        run: |
          IFS='.' read -r major minor patch <<< "${CURRENT_VERSION//v}"
          case "${{ inputs.version_type }}" in
            major) major=$((major + 1)); minor=0; patch=0;;
            minor) minor=$((minor + 1)); patch=0;;
            patch) patch=$((patch + 1));;
          esac
          NEW_VERSION="$major.$minor.$patch"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: Publish to NPM
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Временное обновление package.json
          npm version ${{ steps.bump.outputs.NEW_VERSION }} --no-git-tag-version
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
          npm publish --access public
          echo "Published ui-kit-custom-antd@${{ steps.bump.outputs.NEW_VERSION }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.bump.outputs.NEW_VERSION }}
          name: v${{ steps.bump.outputs.NEW_VERSION }}
          body: |
            New version published to NPM
            - Version: ${{ steps.bump.outputs.NEW_VERSION }}
            - Bump type: ${{ inputs.version_type }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}