name: Publish UI Kit to NPM

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'minor'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Необходимо для создания релиза
      packages: write  # Для публикации в NPM
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Get package info
        id: package
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_OUTPUT

      - name: Get published version
        id: npm_version
        run: |
          PUBLISHED_VERSION=$(npm view ${{ steps.package.outputs.PACKAGE_NAME }} version 2>/dev/null || echo "0.0.0")
          echo "PUBLISHED_VERSION=$PUBLISHED_VERSION" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump
        run: |
          IFS='.' read -r major minor patch <<< "${{ steps.npm_version.outputs.PUBLISHED_VERSION }}"
          case "${{ inputs.version_type }}" in
            major) major=$((major + 1)); minor=0; patch=0;;
            minor) minor=$((minor + 1)); patch=0;;
            patch) patch=$((patch + 1));;
          esac
          NEW_VERSION="${major}.${minor}.${patch}"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create git tag
        run: |
          git tag -a "v${{ steps.bump.outputs.NEW_VERSION }}" -m "Release v${{ steps.bump.outputs.NEW_VERSION }}"

      - name: Publish to NPM
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm pkg set version="${{ steps.bump.outputs.NEW_VERSION }}"
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
          npm publish --access public
          npm pkg set version="${{ steps.package.outputs.CURRENT_VERSION }}"

      - name: Push tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:$GH_TOKEN@github.com/${{ github.repository }}.git
          git push origin "v${{ steps.bump.outputs.NEW_VERSION }}"

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.bump.outputs.NEW_VERSION }}"
          release_name: "v${{ steps.bump.outputs.NEW_VERSION }}"
          body: |
            ## Changes in v${{ steps.bump.outputs.NEW_VERSION }}
            - Version bump: ${{ inputs.version_type }}
            - Previous version: ${{ steps.npm_version.outputs.PUBLISHED_VERSION }}
          draft: false
          prerelease: false